	 -- co2 + co2 + co3 + si2 + si3 + si, si2 + si3, co2 + si3, co2 + co3 + si2 + si3, co -------------------------------

WHEN 0 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 1 =>
	result := COMPLEX'(to_sfixed(0.923880,BITS_H-1, -BITS_L),to_sfixed(-0.382683,BITS_H-1, -BITS_L));
WHEN 2 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 3 =>
	result := COMPLEX'(to_sfixed(0.382683,BITS_H-1, -BITS_L),to_sfixed(-0.923880,BITS_H-1, -BITS_L));
WHEN 4 =>
	result := COMPLEX'(to_sfixed(0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 5 =>
	result := COMPLEX'(to_sfixed(-0.382683,BITS_H-1, -BITS_L),to_sfixed(-0.923880,BITS_H-1, -BITS_L));
WHEN 6 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 7 =>
	result := COMPLEX'(to_sfixed(-0.923880,BITS_H-1, -BITS_L),to_sfixed(-0.382683,BITS_H-1, -BITS_L));
WHEN 8 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 9 =>
	result := COMPLEX'(to_sfixed(-0.923880,BITS_H-1, -BITS_L),to_sfixed(0.382683,BITS_H-1, -BITS_L));
WHEN 10 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 11 =>
	result := COMPLEX'(to_sfixed(-0.382683,BITS_H-1, -BITS_L),to_sfixed(0.923880,BITS_H-1, -BITS_L));
WHEN 12 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(1.000000,BITS_H-1, -BITS_L));
WHEN 13 =>
	result := COMPLEX'(to_sfixed(0.382683,BITS_H-1, -BITS_L),to_sfixed(0.923880,BITS_H-1, -BITS_L));
WHEN 14 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 15 =>
	result := COMPLEX'(to_sfixed(0.923880,BITS_H-1, -BITS_L),to_sfixed(0.382683,BITS_H-1, -BITS_L));
WHEN 16 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 18 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 20 =>
	result := COMPLEX'(to_sfixed(0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 21 =>
	result := COMPLEX'(to_sfixed(-0.382683,BITS_H-1, -BITS_L),to_sfixed(-0.923880,BITS_H-1, -BITS_L));
WHEN 22 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 24 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 25 =>
	result := COMPLEX'(to_sfixed(-0.923880,BITS_H-1, -BITS_L),to_sfixed(0.382683,BITS_H-1, -BITS_L));
WHEN 26 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 27 =>
	result := COMPLEX'(to_sfixed(-0.382683,BITS_H-1, -BITS_L),to_sfixed(0.923880,BITS_H-1, -BITS_L));
WHEN 28 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(1.000000,BITS_H-1, -BITS_L));
WHEN 30 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 32 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 33 =>
	result := COMPLEX'(to_sfixed(0.923880,BITS_H-1, -BITS_L),to_sfixed(-0.382683,BITS_H-1, -BITS_L));
WHEN 35 =>
	result := COMPLEX'(to_sfixed(0.382683,BITS_H-1, -BITS_L),to_sfixed(-0.923880,BITS_H-1, -BITS_L));
WHEN 36 =>
	result := COMPLEX'(to_sfixed(0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 39 =>
	result := COMPLEX'(to_sfixed(-0.923880,BITS_H-1, -BITS_L),to_sfixed(-0.382683,BITS_H-1, -BITS_L));
WHEN 40 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 42 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 44 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(1.000000,BITS_H-1, -BITS_L));
WHEN 45 =>
	result := COMPLEX'(to_sfixed(0.382683,BITS_H-1, -BITS_L),to_sfixed(0.923880,BITS_H-1, -BITS_L));
WHEN 48 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 49 =>
	result := COMPLEX'(to_sfixed(0.923880,BITS_H-1, -BITS_L),to_sfixed(-0.382683,BITS_H-1, -BITS_L));
WHEN 50 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 52 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 54 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 55 =>
	result := COMPLEX'(to_sfixed(-0.923880,BITS_H-1, -BITS_L),to_sfixed(-0.382683,BITS_H-1, -BITS_L));
WHEN 56 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 60 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(1.000000,BITS_H-1, -BITS_L));
WHEN 63 =>
	result := COMPLEX'(to_sfixed(0.923880,BITS_H-1, -BITS_L),to_sfixed(0.382683,BITS_H-1, -BITS_L));
WHEN 64 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 65 =>
	result := COMPLEX'(to_sfixed(0.923880,BITS_H-1, -BITS_L),to_sfixed(-0.382683,BITS_H-1, -BITS_L));
WHEN 66 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 70 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 72 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 75 =>
	result := COMPLEX'(to_sfixed(-0.382683,BITS_H-1, -BITS_L),to_sfixed(0.923880,BITS_H-1, -BITS_L));
WHEN 77 =>
	result := COMPLEX'(to_sfixed(0.382683,BITS_H-1, -BITS_L),to_sfixed(0.923880,BITS_H-1, -BITS_L));
WHEN 78 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 80 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 81 =>
	result := COMPLEX'(to_sfixed(0.923880,BITS_H-1, -BITS_L),to_sfixed(-0.382683,BITS_H-1, -BITS_L));
WHEN 84 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 88 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 90 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 91 =>
	result := COMPLEX'(to_sfixed(-0.382683,BITS_H-1, -BITS_L),to_sfixed(0.923880,BITS_H-1, -BITS_L));
WHEN 96 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 98 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 99 =>
	result := COMPLEX'(to_sfixed(0.382683,BITS_H-1, -BITS_L),to_sfixed(-0.923880,BITS_H-1, -BITS_L));
WHEN 100 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 104 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 105 =>
	result := COMPLEX'(to_sfixed(-0.923880,BITS_H-1, -BITS_L),to_sfixed(0.382683,BITS_H-1, -BITS_L));
WHEN 108 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(1.000000,BITS_H-1, -BITS_L));
WHEN 110 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 112 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 117 =>
	result := COMPLEX'(to_sfixed(-0.382683,BITS_H-1, -BITS_L),to_sfixed(-0.923880,BITS_H-1, -BITS_L));
WHEN 120 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 121 =>
	result := COMPLEX'(to_sfixed(-0.923880,BITS_H-1, -BITS_L),to_sfixed(0.382683,BITS_H-1, -BITS_L));
WHEN 126 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 130 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 132 =>
	result := COMPLEX'(to_sfixed(0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 135 =>
	result := COMPLEX'(to_sfixed(-0.923880,BITS_H-1, -BITS_L),to_sfixed(-0.382683,BITS_H-1, -BITS_L));
WHEN 140 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(1.000000,BITS_H-1, -BITS_L));
WHEN 143 =>
	result := COMPLEX'(to_sfixed(0.923880,BITS_H-1, -BITS_L),to_sfixed(0.382683,BITS_H-1, -BITS_L));
WHEN 144 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 150 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 154 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 156 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(1.000000,BITS_H-1, -BITS_L));
WHEN 165 =>
	result := COMPLEX'(to_sfixed(-0.382683,BITS_H-1, -BITS_L),to_sfixed(-0.923880,BITS_H-1, -BITS_L));
WHEN 168 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 169 =>
	result := COMPLEX'(to_sfixed(-0.923880,BITS_H-1, -BITS_L),to_sfixed(0.382683,BITS_H-1, -BITS_L));
WHEN 180 =>
	result := COMPLEX'(to_sfixed(0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 182 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 195 =>
	result := COMPLEX'(to_sfixed(0.382683,BITS_H-1, -BITS_L),to_sfixed(-0.923880,BITS_H-1, -BITS_L));
WHEN 196 =>
	result := COMPLEX'(to_sfixed(0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 210 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 225 =>
	result := COMPLEX'(to_sfixed(0.923880,BITS_H-1, -BITS_L),to_sfixed(-0.382683,BITS_H-1, -BITS_L));
