	 -- co2 + co2 + co3 + si2 + si3 + si, si2 + si3, co2 + si3, co2 + co3 + si2 + si3, co -------------------------------

WHEN 0 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 1 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 2 =>
	result := COMPLEX'(to_sfixed(0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 3 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 4 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 5 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 6 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(1.000000,BITS_H-1, -BITS_L));
WHEN 7 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 8 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 9 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 10 =>
	result := COMPLEX'(to_sfixed(0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 12 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 14 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(1.000000,BITS_H-1, -BITS_L));
WHEN 15 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 16 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 18 =>
	result := COMPLEX'(to_sfixed(0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 20 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 21 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(0.707107,BITS_H-1, -BITS_L));
WHEN 24 =>
	result := COMPLEX'(to_sfixed(1.000000,BITS_H-1, -BITS_L),to_sfixed(0.000000,BITS_H-1, -BITS_L));
WHEN 25 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 28 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 30 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(1.000000,BITS_H-1, -BITS_L));
WHEN 35 =>
	result := COMPLEX'(to_sfixed(-0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
WHEN 36 =>
	result := COMPLEX'(to_sfixed(-1.000000,BITS_H-1, -BITS_L),to_sfixed(-0.000000,BITS_H-1, -BITS_L));
WHEN 42 =>
	result := COMPLEX'(to_sfixed(-0.000000,BITS_H-1, -BITS_L),to_sfixed(-1.000000,BITS_H-1, -BITS_L));
WHEN 49 =>
	result := COMPLEX'(to_sfixed(0.707107,BITS_H-1, -BITS_L),to_sfixed(-0.707107,BITS_H-1, -BITS_L));
